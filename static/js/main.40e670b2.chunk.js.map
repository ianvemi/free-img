{"version":3,"sources":["components/Form.jsx","components/Image.jsx","components/Container.jsx","components/Fullsize.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","text","addText","type","name","placeholder","onChange","e","target","value","Image","element","addFull","addUrlFull","webformatURL","largeImageURL","likes","comments","user","userImageURL","pageURL","className","src","alt","href","onClick","fullSize","Container","response","map","id","Fullsize","urlFull","App","useState","addResponse","error","setError","full","totalpag","addTotalPag","currentpag","addCurrentPag","page","useEffect","a","perPage","url","fetch","api","json","data","hits","calcularPaginas","Math","ceil","totalHits","length","reqImg","document","querySelector","scrollIntoView","behavior","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40e670b2.chunk.js","sourcesContent":["import React, { Fragment} from 'react';\r\n\r\nconst Form = ({text, addText}) => {\r\n\r\n    \r\n  \r\n\r\n //FUNCTION SUBMIT & FORMAT INPUT\r\n    // const submit = (e) =>{\r\n    //     e.preventDefault();\r\n    //     if(text === ''){\r\n    //         setError(true);\r\n    //         return\r\n    //     }\r\n    //     // let apiText = text.replace(/ /g, \"+\");\r\n    //     // reqImg(apiText);\r\n    //     addText(text);\r\n\r\n    // }\r\n\r\n    // const reqImg = async(apiText) => {\r\n    //     const apikey = '22553841-10fbcb7824b9ed5ff00466b49';\r\n    //     const url = `https://pixabay.com/api/?key=${apikey}&q=${apiText}&image_type=photo`;\r\n    //     const api =  await fetch(url);\r\n    //     const data = await api.json();\r\n    //     console.log(data);\r\n    //   }\r\n\r\n    //   const reqVideo = async(apiText) => {\r\n    //     const apikey = '22553841-10fbcb7824b9ed5ff00466b49';\r\n    //     const url = `https://pixabay.com/api/videos/?key=${apikey}&q=${apiText}`;\r\n    //     const api =  await fetch(url);\r\n    //     const data = await api.json();\r\n    //     console.log(data);\r\n    //   }\r\n\r\n\r\n      \r\n    //SAVING INPUT\r\n    const input = (e) => {\r\n        addText(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <Fragment>\r\n               <form\r\n        // onSubmit={submit}\r\n        >\r\n            <input\r\n        type=\"text\"\r\n        name=\"input\"\r\n        placeholder=\"Search images, like: storm, forest, sports, etc.\"\r\n        onChange={input}\r\n        >\r\n\r\n        </input>\r\n\r\n        {/* <button\r\n        className=\"submit\"\r\n        type=\"submit\"\r\n        > <i className=\"flaticon-loupe\"></i>\r\n        </button> */}\r\n\r\n        </form>\r\n        {}\r\n        {/* error\r\n        ? <div className=\"error\">Oh no!, Your search was not found or  is empty, try it with another words.</div>\r\n        :<div className=\"ok\">LetÂ´s find your next image.</div> */}\r\n        </Fragment>\r\n     \r\n       \r\n        \r\n     );\r\n}\r\n \r\nexport default Form;","import React, {Fragment, useState} from 'react';\r\n\r\nconst Image = ({element, addFull, addUrlFull}) => {\r\n\r\n    const {webformatURL, largeImageURL, likes, comments, user, userImageURL, pageURL } = element;\r\n    \r\n\r\n    const fullSize = (largeImageURL) =>{\r\n        addFull(true);\r\n        addUrlFull(largeImageURL);\r\n    }\r\n    return ( \r\n        <Fragment>\r\n        <div className=\"img\">\r\n        <img src={webformatURL} alt=\"img\" className=\"photo\"></img>\r\n        <div className=\"actions\">\r\n        <div className=\"info\">\r\n        <i className=\"flaticon-like tag\"> {likes}</i>\r\n        <i className=\"flaticon-oval-black-speech-bubble tag\"> {comments}</i>\r\n        <i className=\"tag\"><img src={userImageURL} className=\"img-profile\" alt=\"user-img\"></img>by: {user}</i>\r\n        </div>\r\n        <div className=\"options\">\r\n        <button className=\"action\">\r\n        <a href={pageURL} target=\"blank\"><i className=\"flaticon-download-circular-button\" ></i></a>\r\n        </button>\r\n        <button className=\"action\"\r\n        onClick={()=> fullSize(largeImageURL)}\r\n        >\r\n        <i className=\"flaticon-full-size\"></i>\r\n        </button>        \r\n        \r\n        </div>\r\n        </div>\r\n        \r\n\r\n        </div>\r\n            \r\n        </Fragment>\r\n        \r\n     );\r\n}\r\n \r\nexport default Image;","import React, {Fragment} from 'react';\r\nimport Image from './Image';\r\n\r\nconst Container = ({response, addFull, addUrlFull}) => {\r\n\r\n    return ( \r\n        <Fragment>\r\n         <div className=\"content\">\r\n         {response.map( element => (\r\n             <Image\r\n                 key={element.id}\r\n                 element ={element}\r\n                 addFull = {addFull}\r\n                 addUrlFull = {addUrlFull}\r\n             />\r\n         ))}\r\n         </div>\r\n        \r\n\r\n        </Fragment>\r\n       \r\n     );\r\n}\r\n \r\nexport default Container;","import React from 'react';\r\n\r\nconst Fullsize = ({urlFull, addFull}) => {\r\n\r\n    const desactivate = () =>{\r\n        addFull(false)\r\n    }\r\n    return ( \r\n        <div className=\"img-full\">\r\n            <img src={urlFull} alt=\"full-img\"></img>\r\n            <button \r\n            onClick={()=> desactivate()}\r\n            className=\"close\">&#x2b60;</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Fullsize;","import React, { Fragment, useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport Container from \"./components/Container\";\nimport Fullsize from \"./components/Fullsize\";\nimport \"./App.css\";\nimport \"./font/flaticon/flaticon.css\";\n\nfunction App() {\n\n  const [text, addText] = useState('');\n  const [response, addResponse] = useState([]);\n  const [error, setError] = useState(false);\n\n  const [full, addFull] = useState(false);\n  const [urlFull, addUrlFull] = useState('');\n\n  const[totalpag, addTotalPag] = useState(0);\n  const[currentpag, addCurrentPag] = useState(1);\n\n \n  let page = currentpag;\n  \n\n  useEffect(()=>{\n   \n    const reqImg = async() => {\n      const perPage = 15;\n      const apikey = '22553841-10fbcb7824b9ed5ff00466b49';\n      const url = `https://pixabay.com/api/?key=${apikey}&q=${text}&per_page=${perPage}`;\n      const api =  await fetch(url);\n      const data = await api.json();\n      addResponse(data.hits);\n      // console.log(data);\n\n      const calcularPaginas = Math.ceil(data.totalHits/perPage);\n      addTotalPag(calcularPaginas);\n      \n\n      if(data.hits.length === 0){\n        setError(true);\n    } else{\n      setError(false);\n    }\n    }\n    \n    reqImg();\n    addCurrentPag(1);\n    \n   \n  },[text])\n\n  useEffect(()=>{\n   \n    const reqImg = async() => {\n      const perPage = 15;\n      const apikey = '22553841-10fbcb7824b9ed5ff00466b49';\n      const url = `https://pixabay.com/api/?key=${apikey}&q=${text}&per_page=${perPage}&page=${currentpag}`;\n      const api =  await fetch(url);\n      const data = await api.json();\n      addResponse(data.hits);\n      // console.log(data);\n\n      const calcularPaginas = Math.ceil(data.totalHits/perPage);\n      addTotalPag(calcularPaginas);\n      \n\n      if(data.hits.length === 0){\n        setError(true);\n    } else{\n      setError(false);\n    }\n    }\n    \n    reqImg();\n    const top = document.querySelector('#top');\n    top.scrollIntoView({behavior:'smooth'});\n  },[currentpag])\n\n\n  const plusPag = () =>{\n      const current = currentpag + 1;\n      addCurrentPag(current);\n    }\n   \n\n  const minusPag = () =>{\n      const current = currentpag - 1;\n      addCurrentPag(current);\n    \n  }\n\n  return (\n    <Fragment>\n    <div className=\"screen\" id=\"top\">\n    {full\n    ?<Fullsize\n      urlFull ={urlFull}\n      addFull ={addFull}\n    />\n    :null\n    \n\n    }\n    <div className=\"main\">\n        <h1>Free <span>img</span></h1>\n        <div className=\"form\">\n          <Form \n            text = {text}\n            addText = {addText}\n          />\n        </div>\n        {error\n        ? <div className=\"error\">Oh no!, Your search was not found, try it with another words.</div>\n        :null}\n        <p className=\"page\">{totalpag} pages</p>\n        <h3>powered by pixabay</h3>\n      </div>\n      <div className=\"container\">\n        <Container\n          response = {response}\n          addFull = {addFull}\n          addUrlFull ={addUrlFull}\n        />\n      </div>\n      {full\n      ?null\n      :<div className=\"pagination\">\n      {currentpag <= 1\n      ? null\n      : <button className=\"prev\"\n        onClick={minusPag}\n        >&larr;</button>\n      }\n      <p className=\"page\">{page}/{totalpag}</p>\n      {currentpag >= totalpag\n        ? null\n        :<button className=\"next\"\n        onClick={plusPag}\n        >&rarr;</button>\n      }\n      </div>\n      }      \n    </div>\n      \n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}